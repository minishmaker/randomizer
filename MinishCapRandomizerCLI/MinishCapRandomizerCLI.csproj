<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <StartupObject>MinishCapRandomizerCLI.Program</StartupObject>
        <ApplicationIcon>icon.ico</ApplicationIcon>
        <PublishReadyToRun>true</PublishReadyToRun>
        <SelfContained>true</SelfContained>
        <NoWin32Manifest>true</NoWin32Manifest>
        <PlatformTarget>AnyCPU</PlatformTarget>
		<Company>Team Minish Maker</Company>
		<Title>Minish Cap Randomizer CLI</Title>
		<Description>A CLI that wraps the Legend of Zelda Minish Cap Randomizer Core</Description>
		<Product>Minish Cap Randomizer CLI</Product>
        <Version>1.0.0-rc2.1</Version>
		<LangVersion>default</LangVersion>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <DebugType>portable</DebugType>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <DebugType>none</DebugType>
    </PropertyGroup>

    <ItemGroup>
        <Content Include="icon.ico" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\RandomizerCore\RandomizerCore.csproj" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="..\RandomizerCore\Resouces\Patches\*.*">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="RestSharp" Version="112.1.0" />
      <PackageReference Include="SkiaSharp.NativeAssets.Linux.NoDependencies" Version="2.88.8" />
    </ItemGroup>

	<Target Name="SetSourceRevisionId" BeforeTargets="InitializeSourceControlInformation">
		<Exec Command="git describe --tag --abbrev=0" ConsoleToMSBuild="True" IgnoreExitCode="False">
			<Output PropertyName="SourceRevisionId" TaskParameter="ConsoleOutput" />
		</Exec>
	</Target>

    <Target Name="PostBuildDebugWindows" Condition="$([MSBuild]::IsOSPlatform('Windows')) and '$(Configuration)' == 'Debug'" AfterTargets="PostBuildEvent">
        <Exec Command="xcopy &quot;$(ProjectDir)..\RandomizerCore\Resources\Patches\&quot; &quot;$(TargetDir)Patches\&quot; /y /d /s" />
        <Exec Command="xcopy &quot;$(ProjectDir)..\Vendor\Language Raws\&quot; &quot;$(TargetDir)Language Raws\&quot; /y /d /s" />
    </Target>

    <Target Name="PostBuildReleaseWindows" Condition="$([MSBuild]::IsOSPlatform('Windows')) and '$(Configuration)' == 'Release'" AfterTargets="PostBuildEvent">
        <Exec Command="xcopy &quot;$(ProjectDir)..\RandomizerCore\Resources\Patches\&quot; &quot;$(PublishDir)Patches\&quot; /y /d /s" />
        <Exec Command="xcopy &quot;$(ProjectDir)..\Vendor\Language Raws\&quot; &quot;$(PublishDir)Language Raws\&quot; /y /d /s" />
    </Target>

    <Target Name="PostBuildDebugUnix" Condition="!$([MSBuild]::IsOSPlatform('Windows')) and '$(Configuration)' == 'Debug'" AfterTargets="PostBuildEvent">
        <Exec Command="cp -r &quot;$(ProjectDir)/../RandomizerCore/Resources/Patches/&quot; &quot;$(TargetDir)&quot;" />
        <Exec Command="cp -r &quot;$(ProjectDir)/../Vendor/Language Raws/&quot; &quot;$(TargetDir)&quot;" />
    </Target>

    <Target Name="PostBuildReleaseUnix" Condition="!$([MSBuild]::IsOSPlatform('Windows')) and '$(Configuration)' == 'Release'" AfterTargets="PostBuildEvent">
        <Exec Command="cp -r &quot;$(ProjectDir)/../RandomizerCore/Resources/Patches/&quot; &quot;$(PublishDir)&quot;" />
        <Exec Command="cp -r &quot;$(ProjectDir)/../Vendor/Language Raws/&quot; &quot;$(PublishDir)&quot;" />
    </Target>

</Project>
